/*
 * This file is generated by jOOQ.
 */
package com.tdedsh.generated.tables.records;


import com.tdedsh.generated.enums.TasksStatus;
import com.tdedsh.generated.tables.Tasks;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TasksRecord extends UpdatableRecordImpl<TasksRecord> implements Record9<Integer, Integer, String, String, String, String, TasksStatus, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>taskdb.tasks.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>taskdb.tasks.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>taskdb.tasks.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>taskdb.tasks.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>taskdb.tasks.title</code>.
     */
    public void setTitle(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>taskdb.tasks.title</code>.
     */
    public String getTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>taskdb.tasks.description</code>.
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>taskdb.tasks.description</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>taskdb.tasks.background_color</code>.
     */
    public void setBackgroundColor(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>taskdb.tasks.background_color</code>.
     */
    public String getBackgroundColor() {
        return (String) get(4);
    }

    /**
     * Setter for <code>taskdb.tasks.text_color</code>.
     */
    public void setTextColor(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>taskdb.tasks.text_color</code>.
     */
    public String getTextColor() {
        return (String) get(5);
    }

    /**
     * Setter for <code>taskdb.tasks.status</code>.
     */
    public void setStatus(TasksStatus value) {
        set(6, value);
    }

    /**
     * Getter for <code>taskdb.tasks.status</code>.
     */
    public TasksStatus getStatus() {
        return (TasksStatus) get(6);
    }

    /**
     * Setter for <code>taskdb.tasks.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>taskdb.tasks.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>taskdb.tasks.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>taskdb.tasks.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, Integer, String, String, String, String, TasksStatus, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, Integer, String, String, String, String, TasksStatus, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Tasks.TASKS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Tasks.TASKS.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return Tasks.TASKS.TITLE;
    }

    @Override
    public Field<String> field4() {
        return Tasks.TASKS.DESCRIPTION;
    }

    @Override
    public Field<String> field5() {
        return Tasks.TASKS.BACKGROUND_COLOR;
    }

    @Override
    public Field<String> field6() {
        return Tasks.TASKS.TEXT_COLOR;
    }

    @Override
    public Field<TasksStatus> field7() {
        return Tasks.TASKS.STATUS;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Tasks.TASKS.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return Tasks.TASKS.UPDATED_AT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getTitle();
    }

    @Override
    public String component4() {
        return getDescription();
    }

    @Override
    public String component5() {
        return getBackgroundColor();
    }

    @Override
    public String component6() {
        return getTextColor();
    }

    @Override
    public TasksStatus component7() {
        return getStatus();
    }

    @Override
    public LocalDateTime component8() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component9() {
        return getUpdatedAt();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getTitle();
    }

    @Override
    public String value4() {
        return getDescription();
    }

    @Override
    public String value5() {
        return getBackgroundColor();
    }

    @Override
    public String value6() {
        return getTextColor();
    }

    @Override
    public TasksStatus value7() {
        return getStatus();
    }

    @Override
    public LocalDateTime value8() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value9() {
        return getUpdatedAt();
    }

    @Override
    public TasksRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TasksRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public TasksRecord value3(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public TasksRecord value4(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public TasksRecord value5(String value) {
        setBackgroundColor(value);
        return this;
    }

    @Override
    public TasksRecord value6(String value) {
        setTextColor(value);
        return this;
    }

    @Override
    public TasksRecord value7(TasksStatus value) {
        setStatus(value);
        return this;
    }

    @Override
    public TasksRecord value8(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public TasksRecord value9(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public TasksRecord values(Integer value1, Integer value2, String value3, String value4, String value5, String value6, TasksStatus value7, LocalDateTime value8, LocalDateTime value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TasksRecord
     */
    public TasksRecord() {
        super(Tasks.TASKS);
    }

    /**
     * Create a detached, initialised TasksRecord
     */
    public TasksRecord(Integer id, Integer userId, String title, String description, String backgroundColor, String textColor, TasksStatus status, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Tasks.TASKS);

        setId(id);
        setUserId(userId);
        setTitle(title);
        setDescription(description);
        setBackgroundColor(backgroundColor);
        setTextColor(textColor);
        setStatus(status);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
